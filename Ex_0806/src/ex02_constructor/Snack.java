package ex02_constructor;

public class Snack {
	
	int price;
	//생성자를 정의하지 않아도 사용이 가능한 이유
	//자바의 모든 클래스에는 하나 이상의 생성자가 정의되어 있어야 한다.
	//클래스를 생성하면서 개발자가 직접 생성자를 선언하지 않았지만, 자바 컴파일러가
	//기본생성자를 자동으로 제공해주고 있다.
	//다만, 컴파일러의 눈에만 보일뿐 우리가 보는 코드에는 생략되어있다.
	
	//기본생성자
	//매개변수가 별도로 없으며, 중괄호 블록 안에 코드가 없는 비어있는 생성자를 말한다.
	//기본생성자는 개발자가 직접 선언하지 않았을 때만 컴파일러가 자동으로 추가한다.
	//만약 개발자가 직접 생성자를 선언한다면, 컴파일러는 선언된 생성자를 사용한다.
	//public Snack() { //기본생성자
	//	
	//}
	
	public Snack(int p) {
		price = p;
	}
	
	//생성자 선언의 이유
	//생성자는 객체를 생성함과 동시에 객체를 초기화 할 수 있다.
	//생성자를 통해 객체를 초기화 한다는 것은 필드와 메서드를 호출하는 등 객체를
	//사용하기 위해 메모리에 올린다는 의미이다.
	//생성자를 통해 객체를 메모리에 올림과 동시에, 더 나아가 객체 멤버에 접근이 가능하므로
	//일반적인 메서드처럼 객체 멤버의 데이터를 초기화 할 수 있다.
	//메서드를 통해 매개변수에 값을 전달할 수 있었던것 처럼
	//생성자 역시 매개변수를 통해 필드에 값을 전달할 수 있다.
	
	void info() {
		System.out.println("과자의 가격은" + price + "원입니다.");
	}
}
